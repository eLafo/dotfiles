#!/bin/sh
# ====================================================================
# This is the tmux configuration I use for setting up my Ruby on dev 
# Proudly based on Philp Stein's posted at http://www.psteiner.com/2012/05/tmux-for-ruby-on-dev.html
# 

BASE=$(readlink -f $1)
APP_NAME=$(basename $BASE)
cd $BASE

tmux start-server

# new-session creates first window named 'dev'
tmux new-session -d -s $APP_NAME -n dev

tmux send-keys -t $APP_NAME:dev.0 "cd $BASE; vim" C-m
# split window 'h'orizontally (into two vertical panes)
#tmux split-window -t $APP_NAME:dev -h

# select the left-most pane
#tmux last-pane

# split this pane 'v'ertically (into two horizontal panes)
#tmux split-window -t $APP_NAME:dev -v

# create a second window for 'logs'
#tmux new-window -t $APP_NAME:2 -n logs

# create a second window for 'console and server'
tmux new-window -t $APP_NAME:2 -n console_and_server

# split this pane 'v'ertically (into two horizontal panes)
tmux split-window -t $APP_NAME:console_and_server -v

# start server
tmux send-keys -t $APP_NAME:console_and_server.0 "cd $BASE; rails server" C-m

# run console
tmux send-keys -t $APP_NAME:console_and_server.1 "cd $BASE; rails console" C-m

# start a vim editor in the left-most vertical pane
#tmux send-keys -t $APP_NAME:dev.2 "cd $BASE; vim" C-m

# widen the vim editor pane by 20 cells
#tmux resize-pane -L -t $APP_NAME:dev.2 20

# run guard -c clears shell after each change
#tmux send-keys -t $APP_NAME:dev.0 "cd $BASE; guard -c" C-m

# start dev server
#tmux send-keys -t $APP_NAME:dev.1 "cd $BASE; dev s" C-m

# start logging
#tmux send-keys -t $APP_NAME:logs "cd $BASE; tail -f log/*.log" C-m

# select the vim pane in the dev window
tmux select-window -t $APP_NAME:dev
#tmux select-pane -t $APP_NAME:dev.2

# make the tmux session active
tmux attach-session -d -t $APP_NAME